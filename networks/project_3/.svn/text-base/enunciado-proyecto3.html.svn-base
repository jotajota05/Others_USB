<p>El tercer proyecto consiste en realizar un programa exactamente con las mismas funcionalidades del segundo proyecto.<br /><br />La diferencia es que se utilizar&aacute; un paradigma de programaci&oacute;n en redes diferente: procedimientos remotos. Se debe usar el protocolo RPC (Remote Procedure Call) para la comunicaci&oacute;n entre procesos.<br /> <br />B&aacute;sicamente, el c&oacute;digo de los clientes debe tener llamadas a procedimientos o funciones, s&oacute;lo que el c&oacute;digo que ejecutar&aacute;n esas funciones estar&aacute; en el servidor. Se debe utilizar el est&aacute;ndar RPC, que consiste en <br /><br /> 1) Realizar las especificaciones que sean necesarias en el c&oacute;digo fuente sobre la llamada a los procedimientos<br />2) Ejecutar un filtro, tanto en clientes como en servidores, *antes de compilar*, que autom&aacute;ticamente incluir&aacute; el c&oacute;digo necesario para hacer la comunicaci&oacute;n. En otras palabras, ser&aacute; este filtro el que incluir&aacute; los sockets que sean necesarios, el programados no deber&aacute; utilizar ning&uacute;n socket expl&iacute;citamente.<br /> 3) Compilar y ejecutar</p><p>Pueden encontrar ejemplos sobre la implementacion de RPC en las siguientes direcciones:</p><ul><li>http://www.chuidiang.com/clinux/rpc/rpc.php</li><li>http://www.cs.cf.ac.uk/Dave/C/node33.html</li><li>http://docs.sun.com/app/docs/doc/802-1997/6i6091lam?a=view </li></ul><p>Todas las especificaciones de par&aacute;metros a los programas y de E/S ser&aacute;n iguales a las del segundo proyecto, exceptuando el uso de TPC o UDP, dado que unicamente se utilizara el modelo de programacion RPC, en el que el programador no requiere interactuar con las primitivas y protocolos de comunicacion y del sistema.</p><p>saludos </p>