#############################################################################
# Makefile for building: Proy2
# Generated by qmake (2.01a) (Qt 4.5.1) on: Thu Jul 9 09:15:33 2009
# Project:  Proy2.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt/mkspecs/linux-g++-64 -unix CONFIG+=debug -o Makefile Proy2.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -L/usr/lib -L/usr/X11R6/lib64 -pthread -lpng -lfreetype -lgobject-2.0 -lSM -lICE -pthread -pthread -lXrender -lfontconfig -lXext -lX11 -lQtCore -lz -lm -pthread -lgthread-2.0 -lrt -lglib-2.0 -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		arepera.cpp \
		tablero.cpp \
		productos.cpp \
		objetos.cpp \
		tilda.cpp \
		product.cpp \
		object.cpp \
		arepa.cpp \
		empanada.cpp \
		refresco.cpp \
		jugo.cpp \
		sandwich.cpp \
		cafe.cpp \
		abrir.cpp \
		cantidad.cpp moc_arepera.cpp \
		moc_tablero.cpp \
		moc_productos.cpp \
		moc_objetos.cpp \
		moc_tilda.cpp \
		moc_object.cpp \
		moc_abrir.cpp \
		moc_cantidad.cpp \
		qrc_Images.cpp
OBJECTS       = main.o \
		arepera.o \
		tablero.o \
		productos.o \
		objetos.o \
		tilda.o \
		product.o \
		object.o \
		arepa.o \
		empanada.o \
		refresco.o \
		jugo.o \
		sandwich.o \
		cafe.o \
		abrir.o \
		cantidad.o \
		moc_arepera.o \
		moc_tablero.o \
		moc_productos.o \
		moc_objetos.o \
		moc_tilda.o \
		moc_object.o \
		moc_abrir.o \
		moc_cantidad.o \
		qrc_Images.o
DIST          = /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		Proy2.pro
QMAKE_TARGET  = Proy2
DESTDIR       = 
TARGET        = Proy2

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_arepera.h ui_tablero.h ui_productos.h ui_objetos.h ui_tilda.h ui_abrir.h ui_cantidad.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Proy2.pro  /usr/share/qt/mkspecs/linux-g++-64/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++-64 -unix CONFIG+=debug -o Makefile Proy2.pro
/usr/share/qt/mkspecs/common/g++.conf:
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/debug.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++-64 -unix CONFIG+=debug -o Makefile Proy2.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Proy21.0.0 || $(MKDIR) .tmp/Proy21.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Proy21.0.0/ && $(COPY_FILE) --parents arepera.h tablero.h productos.h objetos.h tilda.h product.h object.h arepa.h empanada.h refresco.h jugo.h sandwich.h cafe.h abrir.h ui_objetos.h ui_arepera.h ui_tablero.h cantidad.h ui_cantidad.h ui_tilda.h .tmp/Proy21.0.0/ && $(COPY_FILE) --parents Images.qrc .tmp/Proy21.0.0/ && $(COPY_FILE) --parents main.cpp arepera.cpp tablero.cpp productos.cpp objetos.cpp tilda.cpp product.cpp object.cpp arepa.cpp empanada.cpp refresco.cpp jugo.cpp sandwich.cpp cafe.cpp abrir.cpp cantidad.cpp .tmp/Proy21.0.0/ && $(COPY_FILE) --parents arepera.ui tablero.ui productos.ui objetos.ui tilda.ui abrir.ui cantidad.ui .tmp/Proy21.0.0/ && (cd `dirname .tmp/Proy21.0.0` && $(TAR) Proy21.0.0.tar Proy21.0.0 && $(COMPRESS) Proy21.0.0.tar) && $(MOVE) `dirname .tmp/Proy21.0.0`/Proy21.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Proy21.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_arepera.cpp moc_tablero.cpp moc_productos.cpp moc_objetos.cpp moc_tilda.cpp moc_object.cpp moc_abrir.cpp moc_cantidad.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_arepera.cpp moc_tablero.cpp moc_productos.cpp moc_objetos.cpp moc_tilda.cpp moc_object.cpp moc_abrir.cpp moc_cantidad.cpp
moc_arepera.cpp: tablero.h \
		object.h \
		product.h \
		arepera.h
	/usr/bin/moc $(DEFINES) $(INCPATH) arepera.h -o moc_arepera.cpp

moc_tablero.cpp: object.h \
		product.h \
		tablero.h
	/usr/bin/moc $(DEFINES) $(INCPATH) tablero.h -o moc_tablero.cpp

moc_productos.cpp: object.h \
		product.h \
		productos.h
	/usr/bin/moc $(DEFINES) $(INCPATH) productos.h -o moc_productos.cpp

moc_objetos.cpp: objetos.h
	/usr/bin/moc $(DEFINES) $(INCPATH) objetos.h -o moc_objetos.cpp

moc_tilda.cpp: object.h \
		product.h \
		tilda.h
	/usr/bin/moc $(DEFINES) $(INCPATH) tilda.h -o moc_tilda.cpp

moc_object.cpp: product.h \
		object.h
	/usr/bin/moc $(DEFINES) $(INCPATH) object.h -o moc_object.cpp

moc_abrir.cpp: abrir.h
	/usr/bin/moc $(DEFINES) $(INCPATH) abrir.h -o moc_abrir.cpp

moc_cantidad.cpp: cantidad.h
	/usr/bin/moc $(DEFINES) $(INCPATH) cantidad.h -o moc_cantidad.cpp

compiler_rcc_make_all: qrc_Images.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_Images.cpp
qrc_Images.cpp: Images.qrc \
		images/edit-delete.png \
		images/go-down.png \
		images/dialog-ok-apply.png \
		images/edit-redo.png \
		images/refrescos.png \
		images/obstaculo.png \
		images/edit-copy.png \
		images/mail-mark-notjunk.png \
		images/queso.gif \
		images/arrow-right.png \
		images/obst1.png \
		images/go-next.png \
		images/arrow-down.png \
		images/document-save.png \
		images/dialog-close.png \
		images/view-list-text.png \
		images/obst2.png \
		images/fondoTablero.png \
		images/empanadas3.jpg \
		images/edit-undo.png \
		images/jugos.png \
		images/arepa.png \
		images/edit-cut.png \
		images/obst3.png \
		images/sandwich.png \
		images/format-fill-color.png \
		images/help-about.png \
		images/application-x-trash.png \
		images/mesaCircular.png \
		images/cafes.png \
		images/barSillas.png \
		images/mesaCuadradaOK.png \
		images/document-print.png \
		images/mesaCircularOK.png \
		images/mesa.gif \
		images/mesaCuadrada.png \
		images/document-new.png \
		images/mesaCuadradaBAD.png \
		images/document-open.png \
		images/dialog-cancel.png \
		images/bar.png \
		images/edit-paste.png \
		images/mesaCircularBAD.png
	/usr/bin/rcc -name Images Images.qrc -o qrc_Images.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_arepera.h ui_tablero.h ui_productos.h ui_objetos.h ui_tilda.h ui_abrir.h ui_cantidad.h
compiler_uic_clean:
	-$(DEL_FILE) ui_arepera.h ui_tablero.h ui_productos.h ui_objetos.h ui_tilda.h ui_abrir.h ui_cantidad.h
ui_arepera.h: arepera.ui
	/usr/bin/uic arepera.ui -o ui_arepera.h

ui_tablero.h: tablero.ui
	/usr/bin/uic tablero.ui -o ui_tablero.h

ui_productos.h: productos.ui
	/usr/bin/uic productos.ui -o ui_productos.h

ui_objetos.h: objetos.ui
	/usr/bin/uic objetos.ui -o ui_objetos.h

ui_tilda.h: tilda.ui
	/usr/bin/uic tilda.ui -o ui_tilda.h

ui_abrir.h: abrir.ui
	/usr/bin/uic abrir.ui -o ui_abrir.h

ui_cantidad.h: cantidad.ui
	/usr/bin/uic cantidad.ui -o ui_cantidad.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp arepera.h \
		tablero.h \
		object.h \
		product.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

arepera.o: arepera.cpp arepera.h \
		tablero.h \
		object.h \
		product.h \
		ui_arepera.h \
		productos.h \
		objetos.h \
		tilda.h \
		abrir.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o arepera.o arepera.cpp

tablero.o: tablero.cpp tablero.h \
		object.h \
		product.h \
		ui_tablero.h \
		tilda.h \
		arepera.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tablero.o tablero.cpp

productos.o: productos.cpp productos.h \
		object.h \
		product.h \
		ui_productos.h \
		arepera.h \
		tablero.h \
		tilda.h \
		ui_objetos.h \
		cantidad.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o productos.o productos.cpp

objetos.o: objetos.cpp objetos.h \
		tablero.h \
		object.h \
		product.h \
		tilda.h \
		arepera.h \
		ui_objetos.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objetos.o objetos.cpp

tilda.o: tilda.cpp tilda.h \
		object.h \
		product.h \
		ui_tilda.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tilda.o tilda.cpp

product.o: product.cpp product.h \
		object.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o product.o product.cpp

object.o: object.cpp object.h \
		product.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o object.o object.cpp

arepa.o: arepa.cpp arepa.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o arepa.o arepa.cpp

empanada.o: empanada.cpp empanada.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o empanada.o empanada.cpp

refresco.o: refresco.cpp refresco.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o refresco.o refresco.cpp

jugo.o: jugo.cpp jugo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jugo.o jugo.cpp

sandwich.o: sandwich.cpp sandwich.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sandwich.o sandwich.cpp

cafe.o: cafe.cpp cafe.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cafe.o cafe.cpp

abrir.o: abrir.cpp abrir.h \
		ui_abrir.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o abrir.o abrir.cpp

cantidad.o: cantidad.cpp cantidad.h \
		ui_cantidad.h \
		productos.h \
		object.h \
		product.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cantidad.o cantidad.cpp

moc_arepera.o: moc_arepera.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_arepera.o moc_arepera.cpp

moc_tablero.o: moc_tablero.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tablero.o moc_tablero.cpp

moc_productos.o: moc_productos.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_productos.o moc_productos.cpp

moc_objetos.o: moc_objetos.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_objetos.o moc_objetos.cpp

moc_tilda.o: moc_tilda.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tilda.o moc_tilda.cpp

moc_object.o: moc_object.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_object.o moc_object.cpp

moc_abrir.o: moc_abrir.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_abrir.o moc_abrir.cpp

moc_cantidad.o: moc_cantidad.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cantidad.o moc_cantidad.cpp

qrc_Images.o: qrc_Images.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_Images.o qrc_Images.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

